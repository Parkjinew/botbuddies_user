<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.smhrd.botbuddies.mapper.StoreMapper">
<select id="storeListAll" resultType="com.smhrd.botbuddies.entity.Store">
SELECT S.store_seq, S.store_name, S.category_seq, ROUND(COALESCE(AVG(R.score), 0), 1) AS AverageRating, COUNT(R.title) AS ReviewCount,S.store_desc, SI.img_filename AS ImageFilename, S.open_state FROM STORES S LEFT JOIN REVIEWS R ON S.store_seq = R.store_seq LEFT JOIN STORE_IMG SI ON S.store_seq = SI.store_seq where S.state='1' GROUP BY S.store_seq, S.store_name, S.category_seq,S.store_desc, SI.img_filename order by S.open_state desc
</select>

<select id="storeList" parameterType="String" resultType="com.smhrd.botbuddies.entity.Store">
SELECT S.store_seq, S.store_name, S.category_seq, ROUND(COALESCE(AVG(R.score), 0), 1) AS AverageRating, COUNT(R.title) AS ReviewCount,S.store_desc, SI.img_filename AS ImageFilename, S.open_state FROM STORES S LEFT JOIN REVIEWS R ON S.store_seq = R.store_seq LEFT JOIN STORE_IMG SI ON S.store_seq = SI.store_seq WHERE S.category_seq=#{id} and S.state='1' GROUP BY S.store_seq, S.store_name, S.category_seq, SI.img_filename order by S.open_state desc
</select>

<select id="searchResult" parameterType="String" resultType="com.smhrd.botbuddies.entity.Store">
SELECT S.store_seq, S.store_name, S.category_seq, ROUND(COALESCE(AVG(R.score), 0), 1) AS AverageRating, COUNT(R.title) AS ReviewCount, SI.img_filename AS ImageFilename FROM STORES S LEFT JOIN REVIEWS R ON S.store_seq = R.store_seq LEFT JOIN STORE_IMG SI ON S.store_seq = SI.store_seq WHERE S.store_name LIKE CONCAT('%' , #{searchQuery} , '%') and now() &gt;= S.open_time and now() &lt;= S.end_time GROUP BY S.store_seq, S.store_name, S.category_seq, SI.img_filename
</select>


<select id="storeInfo" parameterType="String" resultType="com.smhrd.botbuddies.entity.Store">
SELECT 
    S.store_seq, 
    S.user_id, 
    S.store_name, 
    S.STORE_ADDR, 
    S.store_phone, 
    S.CATEGORY_SEQ, 
    S.STORE_DESC, 
    S.TABLING_STATE, 
    S.STATE, 
    S.open_time, 
    S.end_time, 
    S.open_state,  
    ROUND(COALESCE(AVG(R.score), 0), 1) AS AverageRating, 
    COUNT(DISTINCT R.review_seq) AS ReviewCount, 
    GROUP_CONCAT(DISTINCT SI.img_filename) AS ImageFilenames, 
    COUNT(DISTINCT ST.TABLE_SEQ) as TableCount 
FROM 
    STORES S 
LEFT JOIN 
    REVIEWS R ON S.store_seq = R.store_seq 
LEFT JOIN 
    STORE_IMG SI ON S.store_seq = SI.store_seq 
LEFT JOIN 
    STORE_TABLE ST on S.store_seq = ST.STORE_SEQ 
WHERE 
    S.store_seq = #{store_seq}
GROUP BY 
    S.store_seq
</select>

<select id="menuList" parameterType="String" resultType="com.smhrd.botbuddies.entity.Menu">
select * from MENUS where store_seq=#{id} and menu_state='1'
</select>

<select id="storeListAllScore" resultType="com.smhrd.botbuddies.entity.Store">
SELECT S.store_seq, S.store_name, S.category_seq, ROUND(COALESCE(AVG(R.score), 0), 1) AS AverageRating, COUNT(R.title) AS ReviewCount,S.store_desc, SI.img_filename AS ImageFilename, S.open_state FROM STORES S LEFT JOIN REVIEWS R ON S.store_seq = R.store_seq LEFT JOIN STORE_IMG SI ON S.store_seq = SI.store_seq where now() &gt;= S.open_time and now() &lt;= S.end_time GROUP BY S.store_seq, S.store_name, S.category_seq,S.store_desc, SI.img_filename order by AverageRating desc
</select>

<select id="storeListScore" parameterType="String" resultType="com.smhrd.botbuddies.entity.Store">
SELECT S.store_seq, S.store_name, S.category_seq, ROUND(COALESCE(AVG(R.score), 0), 1) AS AverageRating, COUNT(R.title) AS ReviewCount,S.store_desc, SI.img_filename AS ImageFilename, S.open_state FROM STORES S LEFT JOIN REVIEWS R ON S.store_seq = R.store_seq LEFT JOIN STORE_IMG SI ON S.store_seq = SI.store_seq WHERE S.category_seq=#{id} and now() &gt;= S.open_time and now() &lt;= S.end_time GROUP BY S.store_seq, S.store_name, S.category_seq, SI.img_filename order by AverageRating desc
</select>

<select id="storeListAllReview" resultType="com.smhrd.botbuddies.entity.Store">
SELECT S.store_seq, S.store_name, S.category_seq, ROUND(COALESCE(AVG(R.score), 0), 1) AS AverageRating, COUNT(R.title) AS ReviewCount,S.store_desc, SI.img_filename AS ImageFilename, S.open_state FROM STORES S LEFT JOIN REVIEWS R ON S.store_seq = R.store_seq LEFT JOIN STORE_IMG SI ON S.store_seq = SI.store_seq where now() &gt;= S.open_time and now() &lt;= S.end_time GROUP BY S.store_seq, S.store_name, S.category_seq,S.store_desc, SI.img_filename order by ReviewCount desc
</select>

<select id="storeListReview" parameterType="String" resultType="com.smhrd.botbuddies.entity.Store">
SELECT S.store_seq, S.store_name, S.category_seq, ROUND(COALESCE(AVG(R.score), 0), 1) AS AverageRating, COUNT(R.title) AS ReviewCount,S.store_desc, SI.img_filename AS ImageFilename, S.open_state FROM STORES S LEFT JOIN REVIEWS R ON S.store_seq = R.store_seq LEFT JOIN STORE_IMG SI ON S.store_seq = SI.store_seq WHERE S.category_seq=#{id} and now() &gt;= S.open_time and now() &lt;= S.end_time GROUP BY S.store_seq, S.store_name, S.category_seq, SI.img_filename order by ReviewCount desc
</select>

<select id="waitState" parameterType="String" resultType="int">
select count(*) from TABLING where user_id=#{user_id} and state='0'
</select>

<select id="waitCount" resultType="int">
select count(*) from TABLING where store_seq=#{store_seq} and state='0'
</select>

<insert id="wait">
insert into TABLING(store_seq, user_id, wait_num, people_num) values (#{store_seq}, #{user_id}, #{Count}+1, #{people_num})
</insert>

<select id="waitInfo" resultType="com.smhrd.botbuddies.entity.Tabling">
select * from TABLING where user_id=#{user_id} and state='0'
</select>

<select id="getStore" resultType="com.smhrd.botbuddies.entity.Store">
select store_name from STORES where store_seq=#{store_seq}
</select>

<update id="waitDel">
update TABLING set state='2' where tabling_seq=#{tabling_seq}
</update>

<select id="getTable" resultType="com.smhrd.botbuddies.entity.Table">
select table_num from STORE_TABLE where store_seq = #{store_seq} and table_state='1' group by table_num
</select>

<select id="getOrderNum" resultType="Integer">
SELECT COUNT(DISTINCT order_num) AS order_count
FROM 
    ORDERS
</select>

<select id="getAmount">
select price from MENUS where menu_seq=#{menu_seq}
</select>

<insert id="orderInsert">
insert into ORDERS(store_seq, user_id,menu_seq,order_num, quantity, total_amount, discount_amount, pay_amount, paid_amount, pay_method) values(#{store_seq}, #{user_id}, #{menu_seq}, #{i}, #{quantity}, #{totalAmount}, #{j}, #{pay_amount}, #{totalAmount}, #{method})

</insert>

<select id="getTableList" resultType="com.smhrd.botbuddies.entity.Table">
select * from STORE_TABLE where store_seq = #{store_seq} and table_num = #{selectedTable} and table_state='1'
</select>

<update id="selectTable">
update STORE_TABLE set table_state='0' where table_seq=#{table_seq}
</update>

<insert id="reservation">
insert into RESERVATIONS(user_id, store_seq, reserve_name, reserve_date, reserve_time, reserve_num) values (#{user_id}, #{store_seq}, #{reserve_name}, #{reserve_date}, #{reserve_time}, #{reserve_num})
</insert>

<delete id="cancelReserve">
delete from RESERVATIONS
where user_id=#{user_id}
and store_seq=#{store_seq}
and reserve_name=#{reserve_name}
and reserve_date=#{reserve_date}
and reserve_time=#{reserve_time}
and reserve_num=#{reserve_num}
</delete >

<select id="getReser" resultType="com.smhrd.botbuddies.entity.Reservation">
select * from RESERVATIONS where store_seq = #{store_seq}
</select>

<select id="storeReview" resultType="com.smhrd.botbuddies.entity.Review">
select * from REVIEWS where store_seq = #{store_seq} order by create_at desc
</select>

<select id="reviewImgGet" resultType="com.smhrd.botbuddies.entity.ReviewImg">
select * from REVIEW_IMG where review_seq=#{review_seq}
</select>

</mapper>